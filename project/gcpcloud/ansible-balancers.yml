---
- hosts: servers
  gather_facts: yes

# This Third Play install the required software in the Load Balancer
- hosts: bal
  gather_facts: true
  remote_user: ubuntu
  become: yes
  become_method: sudo

  tasks:
    # as there is no internal DNS service, we need to populate theb /etc/hosts
    - name: update /etc/hosts file for name resolution of self
      lineinfile:
        dest: /etc/hosts
        regexp: '.*{{ item }}$'
        line: "127.0.0.1 {{item}}"
        state: present
      with_items: balancer
    # as there is no internal DNS service, we need to populate the /etc/hosts
    - name: update /etc/hosts file for name resolution
      lineinfile:
        dest: /etc/hosts
        regexp: '.*{{ item }}$'
        line: "{{ hostvars[item]['ansible_default_ipv4']['address'] }} {{item}}"
        state: present
      when: hostvars[item]['ansible_default_ipv4']['address'] is defined
      with_items: '{{groups.servers}}'

    - name: add HAPROXY Repository
      apt_repository:
        repo: ppa:vbernat/haproxy-2.1
        update_cache: true

    - name: install haproxy and socat
      apt:
        pkg: ['haproxy', 'socat']
        state: latest

    - name: enable haproxy
      lineinfile:
        path: /etc/default/haproxy
        regexp: "^ENABLED.+$"
        line: "ENABLED=1"
        state: present

# The handler is common to the nginx installation steps
  handlers:

  - name: restart haproxy
    service:
      name: haproxy
      state: restarted

- hosts: balancer1
  remote_user: ubuntu
  become: yes
  become_method: sudo

  tasks:
  - name: deploy haproxy config
    template:
      src: /home/vagrant/project/gcpcloud/templates/haproxy_front.cfg.j2
      dest: /etc/haproxy/haproxy.cfg
      mode: 0644
      validate: haproxy -f %s -c -q
    notify: restart haproxy

  handlers:

  - name: restart haproxy
    service:
      name: haproxy
      state: restarted

- hosts: balancer2
  remote_user: ubuntu
  become: yes
  become_method: sudo

  tasks:
  - name: deploy haproxy config
    template:
      src: /home/vagrant/project/gcpcloud/templates/haproxy_adder.cfg.j2
      dest: /etc/haproxy/haproxy.cfg
      mode: 0644
      validate: haproxy -f %s -c -q
    notify: restart haproxy

  handlers:

  - name: restart haproxy
    service:
      name: haproxy
      state: restarted

- hosts: balancer3
  remote_user: ubuntu
  become: yes
  become_method: sudo

  tasks:
  - name: deploy haproxy config
    template:
      src: /home/vagrant/project/gcpcloud/templates/haproxy_multiplier.cfg.j2
      dest: /etc/haproxy/haproxy.cfg
      mode: 0644
      validate: haproxy -f %s -c -q
    notify: restart haproxy

  handlers:

  - name: restart haproxy
    service:
      name: haproxy
      state: restarted

- hosts: bal
  remote_user: ubuntu
  become: yes
  become_method: sudo

  tasks:
  - name: Ensure HAProxy is started and enabled on boot.
    service:
      name: haproxy
      state: started
      enabled: yes
